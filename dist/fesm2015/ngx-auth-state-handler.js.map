{"version":3,"file":"ngx-auth-state-handler.js.map","sources":["ng://ngx-auth-state-handler/lib/ngx-auth-state-handler.service.ts","ng://ngx-auth-state-handler/lib/ngx-auth-state-handler.module.ts"],"sourcesContent":["/**\n * @license MIT\n * @version 1.1.0\n * @author Leonardo Quevedo\n * @description Authentication management service.\n */\n\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class NgxAuthStateHandler {\n\n    USER_KEY: string = ''\n    TOKEN_KEY: string = ''\n\n    constructor() { }\n\n    setPrefix(prefix: string) {\n        this.USER_KEY = prefix.toUpperCase().replace(/-/g, '_') + '_USER_DATA'\n        this.TOKEN_KEY = prefix.toUpperCase().replace(/-/g, '_') + '_ACCESS_TOKEN'\n    }\n\n    isLoggedIn() {\n        return localStorage[this.TOKEN_KEY] != 'undefined' && localStorage[this.TOKEN_KEY] != undefined\n    }\n\n    setLoggedInUser(user) {\n        localStorage[this.USER_KEY] = JSON.stringify(user)\n    }\n\n    hasRole(role: string) {\n        return this.isLoggedIn() && (this.getLoggedInUser().roles.indexOf(role.toUpperCase()) > -1)\n    }\n\n    getLoggedInUser() {\n        if (this.isLoggedIn()) return JSON.parse(localStorage[this.USER_KEY])\n    }\n\n    setAccessToken(token: string) {\n        localStorage[this.TOKEN_KEY] = token\n    }\n\n    getAccessToken() {\n        return localStorage[this.TOKEN_KEY]\n    }\n\n    logout(callback: Function) {\n        delete localStorage[this.USER_KEY]\n        delete localStorage[this.TOKEN_KEY]\n        callback()\n    }\n}","/**\n * @license MIT\n * @author Leonardo Quevedo\n * @description Directive module.\n */\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { NgxAuthStateHandler } from './ngx-auth-state-handler.service'\n\n@NgModule({\n    imports: [CommonModule],\n    providers: [NgxAuthStateHandler]\n})\nexport class NgxAuthStateHandlerModule { }"],"names":[],"mappings":";;;;;;;;IAeI;QAHA,aAAQ,GAAW,EAAE,CAAA;QACrB,cAAS,GAAW,EAAE,CAAA;KAEL;;;;;IAEjB,SAAS,CAAC,MAAc;QACpB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,YAAY,CAAA;QACtE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,eAAe,CAAA;KAC7E;;;;IAED,UAAU;QACN,OAAO,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,WAAW,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,SAAS,CAAA;KAClG;;;;;IAED,eAAe,CAAC,IAAI;QAChB,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;KACrD;;;;;IAED,OAAO,CAAC,IAAY;QAChB,OAAO,IAAI,CAAC,UAAU,EAAE,KAAK,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;KAC9F;;;;IAED,eAAe;QACX,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA;KACxE;;;;;IAED,cAAc,CAAC,KAAa;QACxB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;KACvC;;;;IAED,cAAc;QACV,OAAO,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;KACtC;;;;;IAED,MAAM,CAAC,QAAkB;QACrB,OAAO,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAClC,OAAO,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QACnC,QAAQ,EAAE,CAAA;KACb;;;YAzCJ,UAAU;;;;;;;;;;;YCCV,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE,CAAC,mBAAmB,CAAC;aACnC;;;;;;;;;;;;;;;"}
